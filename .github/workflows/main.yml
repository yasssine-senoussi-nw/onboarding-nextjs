name: main next boilerplate
on:
  push:
    branches: ["main"]
  pull_request:
jobs:
  build:
    name: Test and Build

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install pnpm
        run: |
          corepack enable
          corepack prepare --activate
          pnpm --version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Get Node version
        id: node-version
        run: echo "version=$(node -v)" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: |
          pnpm install --frozen-lockfile --prefer-offline

      - name: Cache CI files
        id: ci-cache
        uses: actions/cache@v3
        with:
          path: .cicache
          key: ${{ runner.os }}-ci-${{ steps.node-version.outputs.version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-ci-

      - name: Cache Next cache
        id: next-cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Check package.json
        run: |
          echo Checking if package.json is normalized by installing and removing a new package
          pnpm i --loglevel warn --ignore-scripts dedupe@4.0.1
          pnpm rm --loglevel warn dedupe
          git diff --exit-code package.json pnpm-lock.yaml || (echo Your package.json or pnpm-lock.yaml file is not normalize. Did you add a package manually without pnpm ? && exit 1)

      - name: Test
        run: |
          pnpm knip
          pnpm lint:all
          pnpm test:snap --cacheDirectory .cicache/jest-snap
          pnpm test:coverage --cacheDirectory .cicache/jest

      - name: Report Coverage
        uses: romeovs/lcov-reporter-action@v0.2.21
        continue-on-error: true
        with:
          github-token: ${{ github.token }}

      - name: Build
        env:
          NEXT_PUBLIC_BUILD_ID: ${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
          NEXT_PUBLIC_BUILD_DATE: $(date --utc +'%Y-%m-%dT%H:%M:%SZ')
          NEXT_PUBLIC_BUILD_SHA: $GITHUB_SHA
        run: |
          pnpm build:export

      - name: Check assets sizes
        run: pnpm check-filesize

  #######################################################

  check-docker-build:
    name: Docker build check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3

      - name: Run Docker build
        run: |
          docker build -t test .
